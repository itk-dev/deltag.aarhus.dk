<?php

/**
 * @file
 * HÃ¸ringsportal theme.
 */

use Drupal\taxonomy\Entity\Term;
use Drupal\Core\Form\FormStateInterface;

/**
 * Implements hook_preprocess_field().
 */
function hoeringsportal_preprocess_field(&$variables) {
  $moduleHandler = \Drupal::service('module_handler');

  if ($variables['element']['#bundle'] == 'teaser_row') {

    // Fields that need a class depending the paragraph type selected.
    $grid_fields = [
      'field_project_hearing_1',
      'field_project_hearing_2',
      'field_project_hearing_3',
    ];

    if (in_array($variables['element']['#field_name'], $grid_fields)) {
      $variables['paragraph_type'] = $variables['element']['#object']->field_type->getValue()['0']['value'];
    }
  }

  if ($moduleHandler->moduleExists('hoeringsportal_config_settings')) {
    // Fields that use variables from general settings module.
    $require_settings_fields = [
      'dynamic_block_field:node-nearest_hearings',
    ];

    if (in_array($variables['element']['#field_name'], $require_settings_fields)) {
      $config = \Drupal::getContainer()->get('itk_admin.itk_config');
      $variables['hearings_node'] = $config->get('hearings_overview');
      $variables['initiative_node'] = $config->get('initiative_overview');
    }
  }

  if ($variables['field_name'] == 'dynamic_block_field:node-project_timeline') {
    $timeline_vocab = 'timeline_item_types';

    $query = \Drupal::entityQuery('taxonomy_term');
    $query->condition('vid', 'timeline_item_types');
    $tids = $query->execute();
    $terms = Term::loadMultiple($tids);
    $variables['timeline_terms'] = [];
    foreach ($terms as $term) {
      $variables['timeline_terms'][] = [
        'name' => $term->getName(),
        'color' => $term->field_timeline_item_color->color,
      ];
    }
  }
}

/**
 * Implements hook_theme_suggestions_HOOK_alter().
 */
function hoeringsportal_theme_suggestions_page_alter(array &$suggestions, array $variables) {
  $user_pages_anonymous = [
    '/user/login',
    '/user/register',
    '/user/password',
  ];
  $current_path = \Drupal::service('path.current')->getPath();
  if (in_array($current_path, $user_pages_anonymous)) {
    $suggestions[] = 'page__anonymous_forms';
  }
  if ($node = \Drupal::routeMatch()->getParameter('node')) {
    $suggestions[] = 'page__'.$node->bundle();
  }
}

/**
 * Implements hook_theme_suggestions_HOOK_alter().
 */
function hoeringsportal_theme_suggestions_alter(array &$suggestions, array $variables, $hook) {
  if ($hook == 'form' && !empty($variables['element']['#id'])) {
    $user_forms = [
      'user-pass-reset',
      'user-login-form',
      'user-register-form',
      'user-pass',
      'user-cancel-form',
    ];
    if (in_array($variables['element']['#id'], $user_forms)) {
      $suggestions[] = 'form__user';
    }
  }

  if ($hook == 'field') {
    $grid_fields = [
      'field_project_hearing_1',
      'field_project_hearing_2',
      'field_project_hearing_3',
    ];

    if (in_array($variables['element']['#field_name'], $grid_fields)) {
      $suggestions[] = 'field__field_project_hearing';
    }

    $suggestions[] = 'field__' . $variables['element']['#field_name'] . '__' .
      $variables['element']['#view_mode'];

  }

  if ($hook == 'responsive_image') {
    if (isset($variables['attributes']['id']) && $variables['attributes']['id'] == 'hero_image') {
      $suggestions[] = 'responsive_image__hero';
    }
  }
}

/**
 * Implements hook_theme_suggestions_HOOK_alter().
 */
function hoeringsportal_theme_suggestions_form_element_alter(array &$suggestions, array $variables) {
  if (!empty($variables['element']['#type'])) {
    $suggestions[] = 'form_element__' . $variables['element']['#type'];
    if (!empty($variables['element']['#name'])) {
      $suggestions[] = 'form_element__' . $variables['element']['#type'] . '__' . $variables['element']['#name'];
    }
  }
}

/**
 * Implements hook_theme_suggestions_HOOK_alter().
 */
function hoeringsportal_theme_suggestions_form_alter(array &$suggestions, array $variables) {
  if (!empty($variables['element']['#id'])) {
    $suggestions[] = 'form__' . $variables['element']['#id'];
  }
}

/**
 * Implements hook_preprocess_html().
 */
function hoeringsportal_preprocess_html(&$variables) {
  if ($node = \Drupal::request()->attributes->get('node')) {
    $variables['attributes']['class'][] = 'page--'.str_replace('_', '-', $node->bundle());
  }
}

/**
 * Implements hook_preprocess_form().
 *
 * Manually set the template to use for form since drupal does not automatically
 * detect it.
 */
function hoeringsportal_preprocess_form(&$variables, $hook, &$info) {
  if ($variables['element']['#form_id'] == 'search_form') {
    $info['template'] = 'form--search-form';
  }
}

/**
 * Implements hook_preprocess_views_exposed_form().
 *
 * Provide link for external map.
 */
function hoeringsportal_preprocess_views_exposed_form(&$variables) {
  if ($variables['form']['#id'] = 'views-exposed-form-all-hearings-default') {
    $moduleHandler = \Drupal::service('module_handler');
    $variables['custom_config_exists'] = FALSE;
    if ($moduleHandler->moduleExists('hoeringsportal_config_settings')) {
      $variables['custom_config_exists'] = TRUE;
      $config = \Drupal::getContainer()->get('itk_admin.itk_config');
      $variables['full_map_url'] = $config->get('full_map_hearing_url');
    }
  }
}

/**
 * Implements hook_form_FORM_ID_alter().
 *
 * Alter display of search form.
 */
function hoeringsportal_form_search_form_alter(&$form, FormStateInterface $form_state) {
  $form['help_link']['#access'] = FALSE;
}

/**
 * Implements hook_preprocess_menu_local_task().
 */
function hoeringsportal_preprocess_menu_local_task(&$variables) {
  $variables['link']['#options']['attributes']['class'][] = 'nav-link';
  if (isset($variables['is_active']) && $variables['is_active'] == TRUE) {
    $variables['link']['#options']['attributes']['class'][] = 'active';
  }
}

/**
 * Implements hook_preprocess_ds_1col().
 */
function hoeringsportal_preprocess_ds_1col(&$variables) {
  $variables['is_front'] = \Drupal::service('path.matcher')->isFrontPage();
}

/**
 * Implements hook_preprocess_ds_1col().
 */
function hoeringsportal_preprocess_ds_2col_stacked(&$variables) {
  $node_type = isset($variables['content']['#bundle']) ? $variables['content']['#bundle'] : '';
  // Check content type.
  if ($node_type == 'project' || $node_type == 'hearing') {
    $variables['#attached']['library'][] = 'core/drupal.dialog.ajax';
  }
}

/**
 * Implements hook_preprocess_region().
 */
function hoeringsportal_preprocess_region__footer(&$variables) {
  $moduleHandler = \Drupal::service('module_handler');
  $variables['custom_config_exists'] = FALSE;
  if ($moduleHandler->moduleExists('hoeringsportal_config_settings')) {
    $variables['custom_config_exists'] = TRUE;
    $config = \Drupal::getContainer()->get('itk_admin.itk_config');
    $variables['footer_text'] = $config->get('footer_text');
    $variables['footer_second'] = $config->get('footer_text_2nd');
    $variables['footer_third'] = $config->get('footer_text_3rd');
    $variables['footer_fourth'] = $config->get('footer_text_4th');
  }
}

/**
 * Implements hook_theme_suggestions_HOOK_alter().
 */
function hoeringsportal_theme_suggestions_responsive_image_alter(array &$suggestions, array $variables) {
  if ($variables['responsive_image_style_id'] == 'content_image') {
    $suggestions[] = 'responsive_image__hero';
  }
}

/**
 * Implements hook_preprocess_file_link().
 */
function hoeringsportal_preprocess_file_link(&$variables) {
  if ($variables['link']) {
    $variables['file_path'] = file_create_url($variables['file']->get('uri')->getValue()['0']['value']);
  }
}
