networks:
  pretix:
    driver: bridge
    internal: false

services:
  node:
    image: node:18
    profiles:
      - dev
    working_dir: /app
    volumes:
      - .:/app:delegated

  playwright:
    # https://playwright.dev/docs/docker
    # This Playwright version should match the one in `package.json`.
    image: mcr.microsoft.com/playwright:v1.35.0-jammy
    profiles:
      - test
    networks:
      - app
    depends_on:
      - nginx
    volumes:
      - .:/app
      - /tmp/.X11-unix:/tmp/.X11-unix
    working_dir: /app

  # https://github.com/Soluto/oidc-server-mock
  idp-citizen:
    image: ghcr.io/soluto/oidc-server-mock:latest
    profiles:
      - oidc
      - test
    # Let this container be accessible both internally and externally on the same domain.
    container_name: idp-citizen.${COMPOSE_DOMAIN}
    networks:
      - app
      - frontend
    ports:
      - '80'
    volumes:
      - .:/tmp/config:ro
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=frontend"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}_idp-citizen.rule=Host(`idp-citizen.${COMPOSE_DOMAIN}`)"
      - "traefik.http.services.${COMPOSE_PROJECT_NAME}_idp-citizen.loadbalancer.server.port=80"
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      SERVER_OPTIONS_INLINE: |
        AccessTokenJwtType: JWT
        Discovery:
          ShowKeySet: true
        Authentication:
          CookieSameSiteMode: Lax
          CheckSessionCookieSameSiteMode: Lax

      LOGIN_OPTIONS_INLINE: |
        {
          "AllowRememberLogin": false
        }

      LOGOUT_OPTIONS_INLINE: |
        {
          "AutomaticRedirectAfterSignOut": true
        }

      CLIENTS_CONFIGURATION_INLINE: |
        - ClientId: client-id
          ClientSecrets: [client-secret]
          Description: Mock IdP
          AllowedGrantTypes:
            # - client_credentials
            # - implicit
            - authorization_code
          # https://github.com/Soluto/oidc-server-mock/issues/46#issuecomment-704963181
          RequireClientSecret: false
          AllowAccessTokensViaBrowser: true
          # https://github.com/Soluto/oidc-server-mock/issues/26#issuecomment-705022941
          AlwaysIncludeUserClaimsInIdToken: true
          AllowedScopes:
            - openid
            - profile
            - email
          ClientClaimsPrefix: ''
          RedirectUris:
            - '*'
          # https://github.com/Soluto/oidc-server-mock/issues/60
          PostLogoutRedirectUris:
            - '*'
          # https://github.com/Soluto/oidc-server-mock/issues/46#issuecomment-704845375
          RequirePkce: false

      # Needed to set custom claim types in "profile"
      # https://github.com/Soluto/oidc-server-mock/issues/123#issuecomment-1427129278
      # https://github.com/Soluto/oidc-server-mock/blob/master/README.md#simple-configuration
      # https://docs.docker.com/compose/compose-file/compose-file-v3/#environment
      OVERRIDE_STANDARD_IDENTITY_RESOURCES: 'true'
      IDENTITY_RESOURCES_INLINE: |
        # https://auth0.com/docs/get-started/apis/scopes/openid-connect-scopes#standard-claims
        - Name: openid
          ClaimTypes:
            - sub
        - Name: email
          ClaimTypes:
            - email
        - Name: profile
          ClaimTypes:
            # Add your custom claims here
            - dk_ssn
            - name
            - zip

      USERS_CONFIGURATION_INLINE: |
        - SubjectId: 1
          Username: citizen1
          Password: citizen1
          Claims:
            # Claims added here must be defined above in IDENTITY_RESOURCES_INLINE
          - Type: dk_ssn
            Value: '1111111111'
            ValueType: string
          - Type: name
            Value: 'Anders And'
            ValueType: string
          - Type: zip
            Value: '1111'
            ValueType: string

        - SubjectId: 2
          Username: citizen2
          Password: citizen2
          Claims:
          - Type: dk_ssn
            Value: '2222222222'
            ValueType: string
          - Type: name
            Value: 'Bent Betjentsen'
            ValueType: string
          - Type: zip
            Value: '2222'
            ValueType: string

        - SubjectId: 3
          Username: citizen3
          Password: citizen3
          Claims:
          - Type: dk_ssn
            Value: '3333333333'
            ValueType: string
          - Type: name
            Value: 'Carsten Carlsen'
            ValueType: string
          - Type: zip
            Value: '3333'
            ValueType: string

        - SubjectId: 4
          Username: citizen4
          Password: citizen4
          Claims:
          - Type: dk_ssn
            Value: '4444444444'
            ValueType: string
          - Type: name
            Value: 'Dorte Dyhr'
            ValueType: string
          - Type: zip
            Value: '4444'
            ValueType: string

  pretix:
    image: pretix/standalone:latest
    profiles:
      - pretix
    networks:
      - app
      - pretix
      - frontend
    depends_on:
      - pretix_database
      - pretix_redis
    ports:
      - '80'
    volumes:
      - ${PWD}/.docker/pretix/etc/pretix.cfg:/etc/pretix/pretix.cfg

    # Let the pretix container be accessible both internally and externally on the same domain.
    container_name: pretix.${COMPOSE_DOMAIN}
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=frontend"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}_pretix.rule=Host(`pretix.${COMPOSE_DOMAIN}`)"

  pretix_database:
    image: mariadb:10.3
    profiles:
      - pretix
    networks:
      - pretix
    ports:
      - '3306'
    volumes:
      - .docker/pretix/dumps:/docker-entrypoint-initdb.d
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_USER: pretix
      MYSQL_PASSWORD: pretix
      MYSQL_DATABASE: pretix

  pretix_redis:
    image: redis:latest
    profiles:
      - pretix
    networks:
      - pretix
    ports:
      - "6379"
