version: "3"

networks:
  frontend:
    external: true
  app:
    driver: bridge
    internal: false
  pretix:
    driver: bridge
    internal: false

services:
  traefik:
    image: 'traefik:v2.3'
    container_name: 'traefik'
    command:
      #- '--log.level=DEBUG'
      - '--api.insecure=true'
      - '--providers.docker=true'
      - '--providers.docker.exposedbydefault=false'
      - '--entrypoints.web.address=:80'
    networks:
      - frontend
    ports:
      - '80:80'
      - '8080:8080'
    volumes:
      - '/var/run/docker.sock:/var/run/docker.sock:ro'
      - $PWD/.docker/traefik.yml:/traefik.yml:ro

  mariadb:
    image: itkdev/mariadb:latest
    networks:
      - app
    ports:
      - '3306'
    volumes:
      - .docker/drupal/dumps:/docker-entrypoint-initdb.d
    environment:
      - MYSQL_ROOT_PASSWORD=password
      - MYSQL_USER=db
      - MYSQL_PASSWORD=db
      - MYSQL_DATABASE=db
      #- ENCRYPT=1 # Uncomment to enable database encryption.
    # @see https://symfony.com/doc/current/setup/symfony_server.html#docker-integration
    labels:
      com.symfony.server.service-prefix: 'DATABASE'

  phpfpm:
    image: itkdev/php7.4-fpm:latest
    networks:
      - app
    environment:
      - XDEBUG_MODE=${XDEBUG_MODE:-off}
      - XDEBUG_SESSION=${XDEBUG_SESSION:-0}
      - PHP_MAX_EXECUTION_TIME=30
      - PHP_MEMORY_LIMIT=256M
      # - PHP_MAIL=1 # Uncomment to enable mailhog.
      - DOCKER_HOST_DOMAIN=${COMPOSE_DOMAIN}
      - COMPOSER_VERSION=2
    depends_on:
      - mariadb
      - memcached
    volumes:
      - .:/app:delegated
      - drush-cache:/root/.drush

  nginx:
    image: nginx:latest
    networks:
      - app
      - frontend
    depends_on:
      - phpfpm
    ports:
      - '80'
    volumes:
      - ${PWD}/.docker/vhost.conf:/etc/nginx/conf.d/default.conf:ro
      - ./:/app:delegated
    # Let the container be accessible both internally and externally on the same domain.
    container_name: ${COMPOSE_DOMAIN}
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=frontend"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}.rule=Host(`${COMPOSE_DOMAIN}`)"

  memcached:
    image: 'memcached:latest'
    networks:
      - app
    ports:
      - '11211'
    environment:
      - MEMCACHED_CACHE_SIZE=64

  mailhog:
    image: mailhog/mailhog
    networks:
      - app
    ports:
      - "1025"
      - "8025"

  pretix:
    image: pretix/standalone:latest
    networks:
      - app
      - pretix
      - frontend
    depends_on:
      - pretix_database
      - pretix_redis
      - mailhog
    ports:
      - '80'
    volumes:
      - ${PWD}/.docker/pretix/etc/pretix.cfg:/etc/pretix/pretix.cfg

    # Let the pretix container be accessible both internally and externally on the same domain.
    container_name: pretix.${COMPOSE_DOMAIN}
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=frontend"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}_pretix.rule=Host(`pretix.${COMPOSE_DOMAIN}`)"

  pretix_database:
    image: mariadb:10.3
    networks:
      - pretix
    ports:
      - '3306'
    volumes:
      - .docker/pretix/dumps:/docker-entrypoint-initdb.d
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_USER: pretix
      MYSQL_PASSWORD: pretix
      MYSQL_DATABASE: pretix

  pretix_redis:
    image: redis:latest
    networks:
      - pretix
    ports:
      - "6379"

# Drush cache volume to persist cache between runs.
volumes:
  drush-cache:
